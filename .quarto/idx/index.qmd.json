{"title":"<span data-i18n-key=\"title\"></span>","markdown":{"yaml":{"title":"<span data-i18n-key=\"title\"></span>","subtitle":"<span data-i18n-key=\"subtitle\"></span>","format":{"thinkridentity-revealjs":{"footer":"{{< i18n-select choices=\"fr:Français, en:English\" selected=\"fr\" >}}\n","theme":"custom.scss","slideNumber":false,"i18n":{"defaultLocale":"fr","fr":{"title":"Tester une application Shiny","subtitle":"Méthodologie et outils pratiques","hello":"Bonjour","twoyearsago":"Il y a deux ans...","during_r_meetings":"Lors des","pierrot_title":"Pierrot","meeting_pierrot":"Rencontre de Pierrot","wanted_kitchen":"Il voulait refaire sa cuisine","shiny_for_client":"Il devait produire une application Shiny pour un client","revelation":"Il avait alors eu une <span class='relevant'>révélation</span>","importance_mockup":"L'importance d'une maquette pour :","kitchen_design":"La conception de sa cuisine","shiny_realization":"La réalisation de l'application Shiny","two_years_later":"2 ans après... la suite","swedish_store":"Suite à sa visite dans cette grande enseigne suédoise :","bought_everything":"Il a tout acheté : les meubles, les outils, etc...","mockup_validated":"La maquette est validée avec son client :","ready_to_dev":"Il est prêt à se lancer dans le dev","production_time":"Voici venu le temps de la <span class='relevant'>production</span>","assemble_kitchen":"Pierrot va devoir monter sa cuisine :","assemble_furniture":"Assembler les meubles, fixer, visser, etc...","be_careful":"Faire attention à ne rien casser","and_especially":"Et surtout :","quality_assurance":"S'assurer une qualité de montage suffisante pour les années à venir","mockup_plan":"Il y a le plan de la maquette ...","and_realization":"... et la réalisation","pierrot_fears":"Les craintes de Pierrot...","poorly_assembled":"Une cuisine mal montée,","not_robust":"Une cuisine pas robuste,","etc":"etc...","pierrot_fears_title":"Les craintes de Pierrot...","reassured":"Que Pierrot soit rassuré","seller_assures":"Le vendeur lui assure que :","material_tested":"<b>Le matériel est testé</b> : les vis, les placards, etc... sont soumis à des tests de charge","design_tool":"<b>L'outil de conception</b> montre les erreurs éventuelles","new_revelation":"C'est une nouvelle <span class='relevant'>révélation</span>","what_if_tests":"Et si Pierrot utilisait des tests pour l'application Shiny de son client ?","tests_allow":"Faire des tests dans son application Shiny va lui permettre de :","validate_progressively":"Valider progressivement son code","ensure_no_breaks":"S'assurer de ne rien casser en modifiant et/ou en ajoutant du code","increase_robustness":"Augmenter la robustesse de l'application","tests_in_shiny":"Les tests dans Shiny","unit_tests":"Les tests unitaires","unit_tests_subtitle":"Comment s'assurer que chaque tiroir s'ouvre <br>correctement avant de l'installer dans la cuisine...","test_drawer":"Tester un tiroir individuellement","unit_tests_description":"Comme vérifier qu'un tiroir s'ouvre et se ferme correctement, les tests unitaires dans Shiny permettent de :","verify_function":"Vérifier qu'une fonction retourne la bonne valeur","ensure_errors":"S'assurer que les erreurs sont correctement gérées","test_behavior":"Tester le comportement d'une fonction avec différents inputs","test_individually":"Pierrot va tester les différentes sorties d'une fonction, de manière indépendante des autres fonctions.","good_news":"La bonne nouvelle","followed_tutorial":"Pierrot a suivi le tutoriel des <span class='relevant'>#RR25</span> de lundi matin sur {Golem} !","shiny_is_package":"Son application Shiny est donc un <span class='relevant'>package</span>, ce qui va faciliter la création des tests unitaires.","create_test_structure":"Créer la structure de tests","create_structure_text":"Pour créer la structure de tests, Pierrot peut exécuter :","calculate_average_works":"calculate_average fonctionne","test_numeric_values":"Test avec des valeurs numériques","test_empty_vector":"Test avec un vecteur vide","test_non_numeric":"Test avec input non-numérique","values_must_numeric":"values doit être numérique","first_step":"Un premier pas","first_step_text":"Ici, Pierrot vient tester une fonction dans son application.","however_not_direct":"En revanche, il ne vient pas tester directement son application, les intéractions, etc...","secured_business_logic":"Mais il vient de <span class='relevant'>sécuriser la logique métier derrière son application.<span>","integration_tests":"Les tests d'intégration","integration_subtitle":"Les meubles de cuisine sont testés individuellement, <br>mais comment savoir s'ils fonctionneront ensemble ?","assemble_furniture_together":"Assembler les meubles entre eux","integration_description":"Comme vérifier que la porte du frigo ne butte pas contre le mur, les tests d'intégration permettent de :","test_function_integration":"Tester l'emboitement des fonctions","ensure_modules_react":"S'assurer que les modules Shiny réagissent correctement","verify_reactive_flows":"Vérifier le bon fonctionnement des flux réactifs","integration_difference":"À la différence des tests unitaires, Pierrot va tester les interactions entre les fonctions.","first_value":"Premiere valeur","second_value":"Seconde valeur","calculate":"Calculer !","second_step":"Un second pas","second_step_text":"Ici, Pierrot vient de tester les imbrications dans son application et notamment des interactions.","secured_functioning":"Il vient de <span class='relevant'>sécuriser le bon fonctionnement de son application.<span>","tests_remain_programmatic":"En revanche, ces tests restent \"programmatique\" et ils ne simulent pas un vrai navigateur/utilisateur.","e2e_tests":"Les tests End-to-End","e2e_subtitle":"Nos meubles s'assemblent bien en théorie, <br>mais comment savoir si la cuisine sera vraiment utilisable par Pierrot ?","cook_real_meal":"Cuisiner un vrai repas","e2e_description":"Comme cuisiner réellement dans la cuisine pour s'assurer que tout est fonctionnel, les tests end-to-end permettent de :","simulate_user_interactions":"Simuler de vraies interactions utilisateur","test_real_browser":"Tester l'application dans un vrai navigateur","verify_complete_ux":"Vérifier l'expérience utilisateur complète","simulate_user_browser":"Simuler un utilisateur dans un navigateur","use_playwright":"Pour tester l'application dans un vrai navigateur, Pierrot va utiliser la librairie JS <span class='relevant'>Playwright</span>.","but_r_developer":"Mais Pierrot est développeur R, il va donc utiliser le nouveau package R : <code>{pw}</code>","pw_init":"<code>pw::pw_init()</code> pour initier la structure de tests pour Playwright","then_devtools":"Puis <code>devtools::test()</code> comme précédemment","very_fast":"Ca va très vite ... mais Playwright lance dans un navigateur l'application et simule un comportement utilisateur.","multiple_browsers":"Fonctionne pour plusieurs navigateurs : Chromium, Firefix et Webkit.","slow_down_trace":"On peut ralentir les tests en mode \"trace\"","advantage_generate":"Avantage : Playwright propose de générer le code automatiquement en cliquant dans l'application","final_step":"Un dernier pas","final_step_text":"Ici, Pierrot vient de tester dans des conditions réelles son application.","secured_complete":"Il vient de <span class='relevant'>sécuriser le bon fonctionnement de son application, tant sur la logique métier que sur la partie UI</span>.","e2e_ci":"Les tests End-to-End fonctionnent également dans la CI pour assurer à Pierrot un continuité dans son développement.","perfect_kitchen":"La cuisine parfaite de Pierrot","unit_tests_functions":"Toutes les fonctions utilitaires et métiers","integration_reactive_flows":"Flux réactifs principaux","e2e_user_journeys":"Parcours utilisateur critiques ou complexes","pierrot_kitchen":"La cuisine de Pierrot","final_result":"Le résultat final","thanks_to_strategy":"Grâce à sa stratégie de tests à trois niveaux :","delivered_robust":"Pierrot a livré une application robuste","client_satisfied":"Son client est satisfait","future_modifications":"Les modifications futures seront plus sereines","kitchen_functional":"Et sa cuisine est parfaitement fonctionnelle !","thank_you":"Merci"},"en":{"title":"Testing a Shiny Application","subtitle":"Methodology and Practical Tools","hello":"Hello","twoyearsago":"Two years ago...","during_r_meetings":"During the","pierrot_title":"Pierrot","meeting_pierrot":"Meeting Pierrot","wanted_kitchen":"He wanted to renovate his kitchen","shiny_for_client":"He had to produce a Shiny application for a client","revelation":"He had then had a <span class='relevant'>revelation</span>","importance_mockup":"The importance of a mockup for:","kitchen_design":"Designing his kitchen","shiny_realization":"Building the Shiny application","two_years_later":"2 years later... the sequel","swedish_store":"Following his visit to that famous Swedish furniture store:","bought_everything":"He bought everything: furniture, tools, etc...","mockup_validated":"The mockup is validated with his client:","ready_to_dev":"He's ready to start development","production_time":"Now begins the time of <span class='relevant'>production</span>","assemble_kitchen":"Pierrot will have to assemble his kitchen:","assemble_furniture":"Assemble furniture, attach, screw, etc...","be_careful":"Be careful not to break anything","and_especially":"And most importantly:","quality_assurance":"Ensure sufficient build quality for years to come","mockup_plan":"There's the mockup plan...","and_realization":"... and the implementation","pierrot_fears":"Pierrot's fears...","poorly_assembled":"A poorly assembled kitchen,","not_robust":"A kitchen that's not robust,","etc":"etc...","pierrot_fears_title":"Pierrot's fears...","reassured":"Let Pierrot be reassured","seller_assures":"The salesperson assures him that:","material_tested":"<b>The material is tested</b>: screws, cabinets, etc... are subjected to load tests","design_tool":"<b>The design tool</b> shows potential errors","new_revelation":"It's a new <span class='relevant'>revelation</span>","what_if_tests":"What if Pierrot used tests for his client's Shiny application?","tests_allow":"Running tests in his Shiny application will allow him to:","validate_progressively":"Progressively validate his code","ensure_no_breaks":"Ensure nothing breaks when modifying and/or adding code","increase_robustness":"Increase the application's robustness","tests_in_shiny":"Testing in Shiny","unit_tests":"Unit tests","unit_tests_subtitle":"How to ensure each drawer opens<br> correctly before installing it in the kitchen...","test_drawer":"Testing a drawer individually","unit_tests_description":"Like checking that a drawer opens and closes properly, unit tests in Shiny allow you to:","verify_function":"Verify that a function returns the correct value","ensure_errors":"Ensure errors are handled correctly","test_behavior":"Test a function's behavior with different inputs","test_individually":"Pierrot will test the different outputs of a function, independently of other functions.","good_news":"The good news","followed_tutorial":"Pierrot followed the <span class='relevant'>#RR25</span> Monday morning tutorial on {Golem}!","shiny_is_package":"His Shiny application is therefore a <span class='relevant'>package</span>, which will facilitate the creation of unit tests.","create_test_structure":"Creating the test structure","create_structure_text":"To create the test structure, Pierrot can run:","calculate_average_works":"calculate_average works","test_numeric_values":"Test with numeric values","test_empty_vector":"Test with empty vector","test_non_numeric":"Test with non-numeric input","values_must_numeric":"values must be numeric","first_step":"A first step","first_step_text":"Here, Pierrot just tested a function in his application.","however_not_direct":"However, he doesn't directly test his application, interactions, etc...","secured_business_logic":"But he just <span class='relevant'>secured the business logic behind his application.</span>","integration_tests":"Integration tests","integration_subtitle":"Kitchen furniture is tested individually, <br>but how do we know if they'll work together?","assemble_furniture_together":"Assembling furniture together","integration_description":"Like checking that the fridge door doesn't hit the wall, integration tests allow you to:","test_function_integration":"Test function integration","ensure_modules_react":"Ensure Shiny modules react correctly","verify_reactive_flows":"Verify proper functioning of reactive flows","integration_difference":"Unlike unit tests, Pierrot will test interactions between functions.","first_value":"First value","second_value":"Second value","calculate":"Calculate!","second_step":"A second step","second_step_text":"Here, Pierrot just tested the integrations in his application, particularly interactions.","secured_functioning":"He just <span class='relevant'>secured the proper functioning of his application.</span>","tests_remain_programmatic":"However, these tests remain \"programmatic\" and they don't simulate a real browser/user.","e2e_tests":"End-to-End tests","e2e_subtitle":"Our furniture assembles well in theory, <br>but how do we know if the kitchen will really be usable by Pierrot?","cook_real_meal":"Cooking a real meal","e2e_description":"Like actually cooking in the kitchen to ensure everything is functional, end-to-end tests allow you to:","simulate_user_interactions":"Simulate real user interactions","test_real_browser":"Test the application in a real browser","verify_complete_ux":"Verify the complete user experience","simulate_user_browser":"Simulating a user in a browser","use_playwright":"To test the application in a real browser, Pierrot will use the JS library <span class='relevant'>Playwright</span>.","but_r_developer":"But Pierrot is an R developer, so he'll use the new R package: <code>{pw}</code>","pw_init":"<code>pw::pw_init()</code> to initiate the test structure for Playwright","then_devtools":"Then <code>devtools::test()</code> as before","very_fast":"It goes very fast... but Playwright launches the application in a browser and simulates user behavior.","multiple_browsers":"Works for multiple browsers: Chromium, Firefox and Webkit.","slow_down_trace":"We can slow down tests in \"trace\" mode","advantage_generate":"Advantage: Playwright offers to generate the code automatically by clicking in the application","final_step":"A final step","final_step_text":"Here, Pierrot just tested his application under real conditions.","secured_complete":"He just <span class='relevant'>secured the proper functioning of his application, both on the business logic and UI parts</span>.","e2e_ci":"End-to-End tests also work in CI to ensure Pierrot continuity in his development.","perfect_kitchen":"Pierrot's perfect kitchen","unit_tests_functions":"All utility and business functions","integration_reactive_flows":"Main reactive flows","e2e_user_journeys":"Critical or complex user journeys","pierrot_kitchen":"Pierrot's kitchen","final_result":"The final result","thanks_to_strategy":"Thanks to his three-level testing strategy:","delivered_robust":"Pierrot delivered a robust application","client_satisfied":"His client is satisfied","future_modifications":"Future modifications will be more serene","kitchen_functional":"And his kitchen is perfectly functional!","thank_you":"Thank you"}}}},"chalkboard":false,"author":"<a href=\"https://arthurdata.github.io/rencontresR2025\" target=\"_blank\">🔗 arthurdata.github.io/rencontresR2025</a>","include-before-body":"assets/ground.html","date":"last-modified","revealjs-plugins":["i18n"]},"headingAttr":{"id":"","classes":[],"keyvalue":[["{<",""],["i18n-key",""],["\"thank_you\"",""],[">}",""]]},"containsRefs":false,"markdown":"\n\n\n\n{{< i18n-key \"during_r_meetings\" >}} <a href=\"https://www.youtube.com/watch?v=iWD_cLdmLUI&t=81s\" target=\"_blank\">🔗 Rencontres R 2023...</a>\n\n\n:::: {.columns}\n::: {.column width=\"45%\"}\n::: {.fragment .fade-right}\n{{< quarto-lottie src=https://lottie.host/5f2ed099-4737-471d-a199-96b7786d7c88/JhebxcrsLV.json >}}\n:::\n:::\n\n::: {.column width=\"55%\"}\n::: {.fragment .fade-left}\n:::\n\n::: {.fragment .fade-left}\n{{< i18n-key \"wanted_kitchen\" >}}\n:::\n\n::: {.fragment .fade-left}\n{{< i18n-key \"shiny_for_client\" >}}\n:::\n:::\n::::\n\n\n:::: {.columns}\n::: {.column width=\"45%\"}\n{{< quarto-lottie src=https://lottie.host/5f2ed099-4737-471d-a199-96b7786d7c88/JhebxcrsLV.json >}}\n:::\n\n::: {.column width=\"55%\"}\n\n::: {.fragment .fade-left}\n{{< i18n-key \"importance_mockup\" >}} \n\n- {{< i18n-key \"kitchen_design\" >}}\n- {{< i18n-key \"shiny_realization\" >}}\n:::\n:::\n::::\n\n\n:::: {.columns}\n::: {.column width=\"45%\"}\n{{< quarto-lottie src=https://lottie.host/5f2ed099-4737-471d-a199-96b7786d7c88/JhebxcrsLV.json >}}\n:::\n\n::: {.column width=\"55%\"}\n\n::: {.fragment .fade-left}\n{{< i18n-key \"swedish_store\" >}}\n\n{{< i18n-key \"bought_everything\" >}}\n:::\n\n::: {.fragment .fade-left}\n{{< i18n-key \"mockup_validated\" >}}\n\n{{< i18n-key \"ready_to_dev\" >}}\n:::\n:::\n::::\n\n\n:::: {.columns}\n::: {.column width=\"45%\"}\n{{< quarto-lottie src=https://lottie.host/5f2ed099-4737-471d-a199-96b7786d7c88/JhebxcrsLV.json >}}\n:::\n\n::: {.column width=\"55%\"}\n\n::: {.fragment .fade-left}\n{{< i18n-key \"assemble_kitchen\" >}}\n\n- {{< i18n-key \"assemble_furniture\" >}}\n- {{< i18n-key \"be_careful\" >}}\n:::\n\n::: {.fragment .fade-left}\n{{< i18n-key \"and_especially\" >}}\n:::\n\n::: {.fragment .fade-left}\n{{< i18n-key \"quality_assurance\" >}}\n:::\n:::\n::::\n\n\n\n\n:::: {.columns}\n::: {.column width=\"25%\"}\n:::\n\n::: {.column width=\"75%\"}\n\n- {{< i18n-key \"poorly_assembled\" >}}\n- {{< i18n-key \"not_robust\" >}}\n- {{< i18n-key \"etc\" >}}\n:::\n::::\n\n\n::: {.r-stack}\n![](assets/failed1.webp){.fragment width=\"650\" height=\"600\"}\n\n![](assets/failed2.webp){.fragment width=\"650\" height=\"600\"}\n\n![](assets/failed3.webp){.fragment width=\"650\" height=\"600\"}\n:::\n\n\n:::: {.columns}\n::: {.column width=\"25%\"}\n:::\n\n::: {.column width=\"75%\"}\n\n{{< i18n-key \"seller_assures\" >}}\n\n- {{< i18n-key \"material_tested\" >}}\n\n- {{< i18n-key \"design_tool\" >}}\n:::\n::::\n\n\n:::: {.columns}\n::: {.column width=\"45%\"}\n{{< quarto-lottie src=https://lottie.host/5f2ed099-4737-471d-a199-96b7786d7c88/JhebxcrsLV.json >}}\n:::\n\n::: {.column width=\"55%\"}\n\n::: {.fragment .fade-left}\n{{< i18n-key \"what_if_tests\" >}}\n:::\n\n::: {.fragment .fade-left}\n{{< i18n-key \"tests_allow\" >}}\n\n- {{< i18n-key \"validate_progressively\" >}}\n\n- {{< i18n-key \"ensure_no_breaks\" >}}\n\n- {{< i18n-key \"increase_robustness\" >}}\n:::\n\n:::\n::::\n\n\n\n_{{< i18n-key \"unit_tests_subtitle\" >}}_\n\n\n:::: {.columns}\n::: {.column width=\"45%\"}\n![](assets/unit_tests.png)\n:::\n\n::: {.column width=\"55%\"}\n\n{{< i18n-key \"unit_tests_description\" >}}\n\n::: {.fragment .fade-left}\n- {{< i18n-key \"verify_function\" >}}\n- {{< i18n-key \"ensure_errors\" >}}\n- {{< i18n-key \"test_behavior\" >}}\n:::\n:::\n::::\n\n\n:::: {.columns}\n::: {.column width=\"45%\"}\n![](assets/testunitaire.png)\n:::\n\n::: {.column width=\"55%\"}\n\n{{< i18n-key \"test_individually\" >}}\n:::\n::::\n\n\n:::: {.columns}\n::: {.column width=\"45%\"}\n![](assets/testunitaire.png)\n:::\n\n::: {.column width=\"55%\"}\n\n{{< i18n-key \"followed_tutorial\" >}}\n\n{{< i18n-key \"shiny_is_package\" >}}\n:::\n::::\n\n\n:::: {.columns}\n::: {.column width=\"45%\"}\n```\nmyShinyApp/\n├── DESCRIPTION\n├── NAMESPACE\n├── app.R\n├── R/\n│   ├── app_ui.R\n│   ├── app_server.R\n│   └── run_app.R\n├── tests/\n│   ├── testthat/\n│   │   ├── test-calculate_average.R\n│   │   ├── test-golem-recommended.R\n│   │   └── ...\n│   └── testthat.R\n```\n:::\n\n::: {.column width=\"55%\"}\n\n{{< i18n-key \"create_structure_text\" >}}\n\n- `golem::use_recommended_tests()`\n\n- `usethis::use_test(\"calculate_average\")`\n:::\n::::\n\n\n:::: {.columns}\n::: {.column width=\"45%\"}\n```{r}\n#| eval: false\n#| echo: true\ncalculate_average <- function(values) {\n  if (!is.numeric(values)) {\n    stop(\"values must be numeric\")\n  }\n  if (length(values) == 0) {\n    return(0)\n  }\n  sum(values) / length(values)\n}\n```\n:::\n\n::: {.column width=\"55%\"}\n```{r}\n#| eval: false\n#| echo: true\ntest_that(\"calculate_average works\", {\n  # Test with numeric values\n  expect_equal(\n    object = calculate_average(c(10, 20, 30)), \n    expected = 20\n  )\n  \n  # Test with empty vector\n  expect_equal(\n    object = calculate_average(0), \n    expected = 0\n  )\n  \n  # Test with non-numeric input\n  expect_error(\n    object = calculate_average(c(\"a\", \"b\")), \n    \"values must be numeric\"\n  )\n})\n```\n:::\n::::\n\n\n:::: {.columns}\n::: {.column width=\"45%\"}\n![](assets/result_tests.png)\n:::\n\n::: {.column width=\"55%\"}\n\n{{< i18n-key \"first_step_text\" >}}\n\n::: {.fragment .fade-left}\n{{< i18n-key \"however_not_direct\" >}}\n:::\n\n::: {.fragment .fade-left}\n{{< i18n-key \"secured_business_logic\" >}}\n:::\n:::\n::::\n\n\n_{{< i18n-key \"integration_subtitle\" >}}_\n\n\n:::: {.columns}\n::: {.column width=\"45%\"}\n![](assets/inte_tests.png)\n:::\n\n::: {.column width=\"55%\"}\n\n{{< i18n-key \"integration_description\" >}}\n\n::: {.fragment .fade-left}\n- {{< i18n-key \"test_function_integration\" >}}\n\n- {{< i18n-key \"ensure_modules_react\" >}}\n\n- {{< i18n-key \"verify_reactive_flows\" >}}\n:::\n:::\n::::\n\n\n:::: {.columns}\n::: {.column width=\"45%\"}\n\\ \n\n\\ \n\n![](assets/test_usage.png)\n:::\n\n::: {.column width=\"55%\"}\n\n{{< i18n-key \"integration_difference\" >}}\n:::\n::::\n\n\n:::: {.columns}\n::: {.column width=\"45%\"}\n```{r}\n#| eval: false\n#| echo: true\napp_ui <- function(request) {\n  fluidPage(\n    numericInput(\n      inputId = \"num1\",\n      label = \"First value\",\n      value = 10\n    ),\n    numericInput(\n      inputId = \"num2\",\n      label = \"Second value\",\n      value = 10\n    ),\n    ...\n    actionButton(\n      inputId = \"go\",\n      label = \"Calculate!\"\n    )\n  )\n}\n```\n:::\n\n::: {.column width=\"55%\"}\n![](assets/app_inte.png){width=50%}\n:::\n::::\n\n\n:::: {.columns}\n::: {.column width=\"45%\"}\n```{r}\n#| eval: false\n#| echo: true\napp_ui <- function(request) {\n  fluidPage(\n    numericInput(\n      inputId = \"num1\",\n      label = \"First value\",\n      value = 10\n    ),\n    numericInput(\n      inputId = \"num2\",\n      label = \"Second value\",\n      value = 10\n    ),\n    ...\n    actionButton(\n      inputId = \"go\",\n      label = \"Calculate!\"\n    )\n  )\n}\n```\n:::\n\n::: {.column width=\"55%\"}\n```{r}\n#| eval: false\n#| echo: true\napp_server <- function(input, output, session) {\n\n  rv <- reactiveValues()\n\n  observeEvent(input$go, {\n    rv$avg <- calculate_average(\n      values = c(\n        input$num1,\n        input$num2,\n        input$num3,\n        input$num4\n      )\n    )\n  })\n}\n```\n:::\n::::\n\n\n\n:::: {.columns}\n::: {.column width=\"45%\"}\n```{r}\n#| eval: false\n#| echo: true\ntestServer(app_server, {\n  session$setInputs(num1 = 5)\n  session$setInputs(num2 = 5)\n  session$setInputs(num3 = 5)\n  session$setInputs(num4 = 5)\n  session$setInputs(go = 1)\n\n  expect_equal(\n    object = rv$avg, \n    expected = 5\n  )\n\n  session$setInputs(num1 = 10)\n  session$setInputs(num2 = 20)\n  session$setInputs(num3 = 30)\n  session$setInputs(num4 = 12)\n  session$setInputs(go = 2)\n\n  expect_equal(\n    object = rv$avg,\n    expected = 18\n  )\n})\n\n```\n:::\n\n::: {.column width=\"55%\"}\n```{r}\n#| eval: false\n#| echo: true\napp_server <- function(input, output, session) {\n\n  rv <- reactiveValues()\n\n  observeEvent(input$go, {\n    rv$avg <- calculate_average(\n      values = c(\n        input$num1,\n        input$num2,\n        input$num3,\n        input$num4\n      )\n    )\n  })\n}\n```\n:::\n::::\n\n\n:::: {.columns}\n::: {.column width=\"45%\"}\n![](assets/result_tests2.png)\n:::\n\n::: {.column width=\"55%\"}\n\n{{< i18n-key \"second_step_text\" >}}\n\n::: {.fragment .fade-left}\n{{< i18n-key \"secured_functioning\" >}}\n:::\n\n::: {.fragment .fade-left}\n{{< i18n-key \"tests_remain_programmatic\" >}}\n:::\n:::\n::::\n\n\n_{{< i18n-key \"e2e_subtitle\" >}}_\n\n\n:::: {.columns}\n::: {.column width=\"45%\"}\n![](assets/e2e_tests.png)\n:::\n\n::: {.column width=\"55%\"}\n\n{{< i18n-key \"e2e_description\" >}}\n\n::: {.fragment .fade-left}\n- {{< i18n-key \"simulate_user_interactions\" >}}\n\n- {{< i18n-key \"test_real_browser\" >}}\n\n- {{< i18n-key \"verify_complete_ux\" >}}\n:::\n:::\n::::\n\n\n:::: {.columns}\n::: {.column width=\"45%\"}\n![](assets/e2e_tests.png)\n:::\n\n::: {.column width=\"55%\"}\n\n{{< i18n-key \"use_playwright\" >}}\n\n::: {.fragment .fade-left}\n{{< i18n-key \"but_r_developer\" >}}\n\n<a href=\"https://github.com/ThinkR-open/pw\" target=\"_blank\">🔗 github.com/ThinkR-open/pw</a>\n:::\n:::\n::::\n\n\n:::: {.columns}\n::: {.column width=\"65%\"}\n![](assets/signature-r.png)\n:::\n\n::: {.column width=\"35%\"}\n\n<a href=\"https://connect.thinkr.fr/signature-r/\" target=\"_blank\">🔗 connect.thinkr.fr/signature-r/</a>\n\n::: {.fragment .fade-left}\n{{< i18n-key \"pw_init\" >}}\n\n{{< i18n-key \"then_devtools\" >}}\n:::\n:::\n::::\n\n\n\n:::: {.columns}\n::: {.column width=\"70%\"}\n![](assets/tests_e2e.gif)\n:::\n\n::: {.column width=\"30%\"}\n\n{{< i18n-key \"very_fast\" >}}\n\n{{< i18n-key \"multiple_browsers\" >}}\n:::\n::::\n\n\n\n:::: {.columns}\n::: {.column width=\"70%\"}\n![](assets/tests_e2e-2.gif)\n:::\n\n::: {.column width=\"30%\"}\n\n{{< i18n-key \"slow_down_trace\" >}}\n:::\n::::\n\n\n:::: {.columns}\n::: {.column width=\"70%\"}\n```{js}\n#| eval: false\nimport { test, expect } from '@playwright/test';\n\ntest('Fill signature is working', async ({ page }) => {\n  await page.goto('http://localhost:3000/');\n  await expect(page.getByTestId(\"appName\")).toBeVisible();\n\n  await expect(page.getByTestId('firstname')).toBeVisible();\n  await expect(page.getByPlaceholder('John')).toBeEmpty();\n  await page.getByPlaceholder('John').click();\n  await page.getByPlaceholder('John').fill('Arthur');\n  await expect(page.getByTestId('signature-names')).toMatchAriaSnapshot(`- 'cell \"Arthur {{lastname}}\"'`);\n\n  await page.getByPlaceholder('Doe').fill('Bréant');\n  await expect(page.getByTestId('signature-names')).toMatchAriaSnapshot(`- 'cell \"Arthur Bréant\"'`);\n\n  await page.getByRole('button', { name: 'copy fa-solid icon Copy to' }).click();\n  await expect(page.getByText('×Paste the signature in your')).toBeVisible();\n});\n```\n:::\n\n::: {.column width=\"30%\"}\n\n{{< i18n-key \"advantage_generate\" >}}\n:::\n::::\n\n\n![](assets/e2e_generator.gif){width=\"100%\"}\n\n\n:::: {.columns}\n::: {.column width=\"45%\"}\n![](assets/result_tests3.png)\n:::\n\n::: {.column width=\"55%\"}\n\n{{< i18n-key \"final_step_text\" >}}\n\n::: {.fragment .fade-left}\n{{< i18n-key \"secured_complete\" >}}\n:::\n\n::: {.fragment .fade-left}\n{{< i18n-key \"e2e_ci\" >}}\n:::\n:::\n::::\n\n\n:::: {.columns}\n::: {.column width=\"45%\"}\n![](assets/e2e_tests.png)\n:::\n\n::: {.column width=\"55%\"}\n\n\n::: {.fragment .fade-left}\n**{{< i18n-key \"unit_tests\" >}}**\n\n- {{< i18n-key \"unit_tests_functions\" >}}\n:::\n\n::: {.fragment .fade-left}\n**{{< i18n-key \"integration_tests\" >}}**\n\n- {{< i18n-key \"integration_reactive_flows\" >}}\n:::\n\n::: {.fragment .fade-left}\n**{{< i18n-key \"e2e_tests\" >}}**\n\n- {{< i18n-key \"e2e_user_journeys\" >}}\n:::\n:::\n::::\n\n\n:::: {.columns}\n::: {.column width=\"45%\"}\n::: {.fragment .fade-right}\n{{< quarto-lottie src=https://lottie.host/5f2ed099-4737-471d-a199-96b7786d7c88/JhebxcrsLV.json >}}\n:::\n:::\n\n::: {.column width=\"55%\"}\n::: {.fragment .fade-left}\n\n{{< i18n-key \"thanks_to_strategy\" >}}\n:::\n\n::: {.fragment .fade-left}\n- {{< i18n-key \"delivered_robust\" >}}\n\n- {{< i18n-key \"client_satisfied\" >}}\n\n- {{< i18n-key \"future_modifications\" >}}\n:::\n\n::: {.fragment .fade-left}\n{{< i18n-key \"kitchen_functional\" >}}\n:::\n:::\n::::\n\n\n:::: {.columns}\n::: {.column width=\"45%\"}\n{{< quarto-lottie src=https://lottie.host/5f2ed099-4737-471d-a199-96b7786d7c88/JhebxcrsLV.json >}}\n:::\n\n::: {.column width=\"55%\"}\n\n<a href=\"https://arthurdata.github.io/rencontresR2025\" target=\"_blank\">🔗 arthurdata.github.io/rencontresR2025</a>\n:::\n::::","srcMarkdownNoYaml":"\n\n# {{< i18n-key \"hello\" >}}\n\n# {{< i18n-key \"twoyearsago\" >}}\n\n{{< i18n-key \"during_r_meetings\" >}} <a href=\"https://www.youtube.com/watch?v=iWD_cLdmLUI&t=81s\" target=\"_blank\">🔗 Rencontres R 2023...</a>\n\n## {{< i18n-key \"pierrot_title\" >}}\n\n:::: {.columns}\n::: {.column width=\"45%\"}\n::: {.fragment .fade-right}\n{{< quarto-lottie src=https://lottie.host/5f2ed099-4737-471d-a199-96b7786d7c88/JhebxcrsLV.json >}}\n:::\n:::\n\n::: {.column width=\"55%\"}\n::: {.fragment .fade-left}\n### {{< i18n-key \"meeting_pierrot\" >}}\n:::\n\n::: {.fragment .fade-left}\n{{< i18n-key \"wanted_kitchen\" >}}\n:::\n\n::: {.fragment .fade-left}\n{{< i18n-key \"shiny_for_client\" >}}\n:::\n:::\n::::\n\n## {{< i18n-key \"pierrot_title\" >}}\n\n:::: {.columns}\n::: {.column width=\"45%\"}\n{{< quarto-lottie src=https://lottie.host/5f2ed099-4737-471d-a199-96b7786d7c88/JhebxcrsLV.json >}}\n:::\n\n::: {.column width=\"55%\"}\n### {{< i18n-key \"revelation\" >}}\n\n::: {.fragment .fade-left}\n{{< i18n-key \"importance_mockup\" >}} \n\n- {{< i18n-key \"kitchen_design\" >}}\n- {{< i18n-key \"shiny_realization\" >}}\n:::\n:::\n::::\n\n## {{< i18n-key \"pierrot_title\" >}}\n\n:::: {.columns}\n::: {.column width=\"45%\"}\n{{< quarto-lottie src=https://lottie.host/5f2ed099-4737-471d-a199-96b7786d7c88/JhebxcrsLV.json >}}\n:::\n\n::: {.column width=\"55%\"}\n### {{< i18n-key \"two_years_later\" >}}\n\n::: {.fragment .fade-left}\n{{< i18n-key \"swedish_store\" >}}\n\n{{< i18n-key \"bought_everything\" >}}\n:::\n\n::: {.fragment .fade-left}\n{{< i18n-key \"mockup_validated\" >}}\n\n{{< i18n-key \"ready_to_dev\" >}}\n:::\n:::\n::::\n\n## {{< i18n-key \"pierrot_title\" >}}\n\n:::: {.columns}\n::: {.column width=\"45%\"}\n{{< quarto-lottie src=https://lottie.host/5f2ed099-4737-471d-a199-96b7786d7c88/JhebxcrsLV.json >}}\n:::\n\n::: {.column width=\"55%\"}\n### {{< i18n-key \"production_time\" >}}\n\n::: {.fragment .fade-left}\n{{< i18n-key \"assemble_kitchen\" >}}\n\n- {{< i18n-key \"assemble_furniture\" >}}\n- {{< i18n-key \"be_careful\" >}}\n:::\n\n::: {.fragment .fade-left}\n{{< i18n-key \"and_especially\" >}}\n:::\n\n::: {.fragment .fade-left}\n{{< i18n-key \"quality_assurance\" >}}\n:::\n:::\n::::\n\n# {{< i18n-key \"mockup_plan\" >}}\n\n# {{< i18n-key \"and_realization\" >}}\n\n## {{< i18n-key \"pierrot_title\" >}}\n\n:::: {.columns}\n::: {.column width=\"25%\"}\n:::\n\n::: {.column width=\"75%\"}\n### {{< i18n-key \"pierrot_fears_title\" >}}\n\n- {{< i18n-key \"poorly_assembled\" >}}\n- {{< i18n-key \"not_robust\" >}}\n- {{< i18n-key \"etc\" >}}\n:::\n::::\n\n## {{< i18n-key \"pierrot_fears_title\" >}}\n\n::: {.r-stack}\n![](assets/failed1.webp){.fragment width=\"650\" height=\"600\"}\n\n![](assets/failed2.webp){.fragment width=\"650\" height=\"600\"}\n\n![](assets/failed3.webp){.fragment width=\"650\" height=\"600\"}\n:::\n\n## {{< i18n-key \"pierrot_title\" >}}\n\n:::: {.columns}\n::: {.column width=\"25%\"}\n:::\n\n::: {.column width=\"75%\"}\n### {{< i18n-key \"reassured\" >}}\n\n{{< i18n-key \"seller_assures\" >}}\n\n- {{< i18n-key \"material_tested\" >}}\n\n- {{< i18n-key \"design_tool\" >}}\n:::\n::::\n\n## {{< i18n-key \"pierrot_title\" >}}\n\n:::: {.columns}\n::: {.column width=\"45%\"}\n{{< quarto-lottie src=https://lottie.host/5f2ed099-4737-471d-a199-96b7786d7c88/JhebxcrsLV.json >}}\n:::\n\n::: {.column width=\"55%\"}\n### {{< i18n-key \"new_revelation\" >}}\n\n::: {.fragment .fade-left}\n{{< i18n-key \"what_if_tests\" >}}\n:::\n\n::: {.fragment .fade-left}\n{{< i18n-key \"tests_allow\" >}}\n\n- {{< i18n-key \"validate_progressively\" >}}\n\n- {{< i18n-key \"ensure_no_breaks\" >}}\n\n- {{< i18n-key \"increase_robustness\" >}}\n:::\n\n:::\n::::\n\n# {{< i18n-key \"tests_in_shiny\" >}}\n\n# {{< i18n-key \"unit_tests\" >}}\n\n_{{< i18n-key \"unit_tests_subtitle\" >}}_\n\n## {{< i18n-key \"unit_tests\" >}}\n\n:::: {.columns}\n::: {.column width=\"45%\"}\n![](assets/unit_tests.png)\n:::\n\n::: {.column width=\"55%\"}\n### {{< i18n-key \"test_drawer\" >}}\n\n{{< i18n-key \"unit_tests_description\" >}}\n\n::: {.fragment .fade-left}\n- {{< i18n-key \"verify_function\" >}}\n- {{< i18n-key \"ensure_errors\" >}}\n- {{< i18n-key \"test_behavior\" >}}\n:::\n:::\n::::\n\n## {{< i18n-key \"unit_tests\" >}}\n\n:::: {.columns}\n::: {.column width=\"45%\"}\n![](assets/testunitaire.png)\n:::\n\n::: {.column width=\"55%\"}\n### {{< i18n-key \"test_drawer\" >}}\n\n{{< i18n-key \"test_individually\" >}}\n:::\n::::\n\n## {{< i18n-key \"unit_tests\" >}}\n\n:::: {.columns}\n::: {.column width=\"45%\"}\n![](assets/testunitaire.png)\n:::\n\n::: {.column width=\"55%\"}\n### {{< i18n-key \"good_news\" >}}\n\n{{< i18n-key \"followed_tutorial\" >}}\n\n{{< i18n-key \"shiny_is_package\" >}}\n:::\n::::\n\n## {{< i18n-key \"unit_tests\" >}}\n\n:::: {.columns}\n::: {.column width=\"45%\"}\n```\nmyShinyApp/\n├── DESCRIPTION\n├── NAMESPACE\n├── app.R\n├── R/\n│   ├── app_ui.R\n│   ├── app_server.R\n│   └── run_app.R\n├── tests/\n│   ├── testthat/\n│   │   ├── test-calculate_average.R\n│   │   ├── test-golem-recommended.R\n│   │   └── ...\n│   └── testthat.R\n```\n:::\n\n::: {.column width=\"55%\"}\n### {{< i18n-key \"create_test_structure\" >}}\n\n{{< i18n-key \"create_structure_text\" >}}\n\n- `golem::use_recommended_tests()`\n\n- `usethis::use_test(\"calculate_average\")`\n:::\n::::\n\n## {{< i18n-key \"unit_tests\" >}}\n\n:::: {.columns}\n::: {.column width=\"45%\"}\n```{r}\n#| eval: false\n#| echo: true\ncalculate_average <- function(values) {\n  if (!is.numeric(values)) {\n    stop(\"values must be numeric\")\n  }\n  if (length(values) == 0) {\n    return(0)\n  }\n  sum(values) / length(values)\n}\n```\n:::\n\n::: {.column width=\"55%\"}\n```{r}\n#| eval: false\n#| echo: true\ntest_that(\"calculate_average works\", {\n  # Test with numeric values\n  expect_equal(\n    object = calculate_average(c(10, 20, 30)), \n    expected = 20\n  )\n  \n  # Test with empty vector\n  expect_equal(\n    object = calculate_average(0), \n    expected = 0\n  )\n  \n  # Test with non-numeric input\n  expect_error(\n    object = calculate_average(c(\"a\", \"b\")), \n    \"values must be numeric\"\n  )\n})\n```\n:::\n::::\n\n## {{< i18n-key \"unit_tests\" >}}\n\n:::: {.columns}\n::: {.column width=\"45%\"}\n![](assets/result_tests.png)\n:::\n\n::: {.column width=\"55%\"}\n### {{< i18n-key \"first_step\" >}}\n\n{{< i18n-key \"first_step_text\" >}}\n\n::: {.fragment .fade-left}\n{{< i18n-key \"however_not_direct\" >}}\n:::\n\n::: {.fragment .fade-left}\n{{< i18n-key \"secured_business_logic\" >}}\n:::\n:::\n::::\n\n# {{< i18n-key \"integration_tests\" >}}\n\n_{{< i18n-key \"integration_subtitle\" >}}_\n\n## {{< i18n-key \"integration_tests\" >}}\n\n:::: {.columns}\n::: {.column width=\"45%\"}\n![](assets/inte_tests.png)\n:::\n\n::: {.column width=\"55%\"}\n### {{< i18n-key \"assemble_furniture_together\" >}}\n\n{{< i18n-key \"integration_description\" >}}\n\n::: {.fragment .fade-left}\n- {{< i18n-key \"test_function_integration\" >}}\n\n- {{< i18n-key \"ensure_modules_react\" >}}\n\n- {{< i18n-key \"verify_reactive_flows\" >}}\n:::\n:::\n::::\n\n## {{< i18n-key \"integration_tests\" >}}\n\n:::: {.columns}\n::: {.column width=\"45%\"}\n\\ \n\n\\ \n\n![](assets/test_usage.png)\n:::\n\n::: {.column width=\"55%\"}\n### {{< i18n-key \"assemble_furniture_together\" >}}\n\n{{< i18n-key \"integration_difference\" >}}\n:::\n::::\n\n## {{< i18n-key \"integration_tests\" >}}\n\n:::: {.columns}\n::: {.column width=\"45%\"}\n```{r}\n#| eval: false\n#| echo: true\napp_ui <- function(request) {\n  fluidPage(\n    numericInput(\n      inputId = \"num1\",\n      label = \"First value\",\n      value = 10\n    ),\n    numericInput(\n      inputId = \"num2\",\n      label = \"Second value\",\n      value = 10\n    ),\n    ...\n    actionButton(\n      inputId = \"go\",\n      label = \"Calculate!\"\n    )\n  )\n}\n```\n:::\n\n::: {.column width=\"55%\"}\n![](assets/app_inte.png){width=50%}\n:::\n::::\n\n## {{< i18n-key \"integration_tests\" >}}\n\n:::: {.columns}\n::: {.column width=\"45%\"}\n```{r}\n#| eval: false\n#| echo: true\napp_ui <- function(request) {\n  fluidPage(\n    numericInput(\n      inputId = \"num1\",\n      label = \"First value\",\n      value = 10\n    ),\n    numericInput(\n      inputId = \"num2\",\n      label = \"Second value\",\n      value = 10\n    ),\n    ...\n    actionButton(\n      inputId = \"go\",\n      label = \"Calculate!\"\n    )\n  )\n}\n```\n:::\n\n::: {.column width=\"55%\"}\n```{r}\n#| eval: false\n#| echo: true\napp_server <- function(input, output, session) {\n\n  rv <- reactiveValues()\n\n  observeEvent(input$go, {\n    rv$avg <- calculate_average(\n      values = c(\n        input$num1,\n        input$num2,\n        input$num3,\n        input$num4\n      )\n    )\n  })\n}\n```\n:::\n::::\n\n\n## {{< i18n-key \"integration_tests\" >}}\n\n:::: {.columns}\n::: {.column width=\"45%\"}\n```{r}\n#| eval: false\n#| echo: true\ntestServer(app_server, {\n  session$setInputs(num1 = 5)\n  session$setInputs(num2 = 5)\n  session$setInputs(num3 = 5)\n  session$setInputs(num4 = 5)\n  session$setInputs(go = 1)\n\n  expect_equal(\n    object = rv$avg, \n    expected = 5\n  )\n\n  session$setInputs(num1 = 10)\n  session$setInputs(num2 = 20)\n  session$setInputs(num3 = 30)\n  session$setInputs(num4 = 12)\n  session$setInputs(go = 2)\n\n  expect_equal(\n    object = rv$avg,\n    expected = 18\n  )\n})\n\n```\n:::\n\n::: {.column width=\"55%\"}\n```{r}\n#| eval: false\n#| echo: true\napp_server <- function(input, output, session) {\n\n  rv <- reactiveValues()\n\n  observeEvent(input$go, {\n    rv$avg <- calculate_average(\n      values = c(\n        input$num1,\n        input$num2,\n        input$num3,\n        input$num4\n      )\n    )\n  })\n}\n```\n:::\n::::\n\n## {{< i18n-key \"integration_tests\" >}}\n\n:::: {.columns}\n::: {.column width=\"45%\"}\n![](assets/result_tests2.png)\n:::\n\n::: {.column width=\"55%\"}\n### {{< i18n-key \"second_step\" >}}\n\n{{< i18n-key \"second_step_text\" >}}\n\n::: {.fragment .fade-left}\n{{< i18n-key \"secured_functioning\" >}}\n:::\n\n::: {.fragment .fade-left}\n{{< i18n-key \"tests_remain_programmatic\" >}}\n:::\n:::\n::::\n\n# {{< i18n-key \"e2e_tests\" >}}\n\n_{{< i18n-key \"e2e_subtitle\" >}}_\n\n## {{< i18n-key \"e2e_tests\" >}}\n\n:::: {.columns}\n::: {.column width=\"45%\"}\n![](assets/e2e_tests.png)\n:::\n\n::: {.column width=\"55%\"}\n### {{< i18n-key \"cook_real_meal\" >}}\n\n{{< i18n-key \"e2e_description\" >}}\n\n::: {.fragment .fade-left}\n- {{< i18n-key \"simulate_user_interactions\" >}}\n\n- {{< i18n-key \"test_real_browser\" >}}\n\n- {{< i18n-key \"verify_complete_ux\" >}}\n:::\n:::\n::::\n\n## {{< i18n-key \"e2e_tests\" >}}\n\n:::: {.columns}\n::: {.column width=\"45%\"}\n![](assets/e2e_tests.png)\n:::\n\n::: {.column width=\"55%\"}\n### {{< i18n-key \"simulate_user_browser\" >}}\n\n{{< i18n-key \"use_playwright\" >}}\n\n::: {.fragment .fade-left}\n{{< i18n-key \"but_r_developer\" >}}\n\n<a href=\"https://github.com/ThinkR-open/pw\" target=\"_blank\">🔗 github.com/ThinkR-open/pw</a>\n:::\n:::\n::::\n\n## {{< i18n-key \"e2e_tests\" >}}\n\n:::: {.columns}\n::: {.column width=\"65%\"}\n![](assets/signature-r.png)\n:::\n\n::: {.column width=\"35%\"}\n### {{< i18n-key \"simulate_user_browser\" >}}\n\n<a href=\"https://connect.thinkr.fr/signature-r/\" target=\"_blank\">🔗 connect.thinkr.fr/signature-r/</a>\n\n::: {.fragment .fade-left}\n{{< i18n-key \"pw_init\" >}}\n\n{{< i18n-key \"then_devtools\" >}}\n:::\n:::\n::::\n\n\n## {{< i18n-key \"e2e_tests\" >}}\n\n:::: {.columns}\n::: {.column width=\"70%\"}\n![](assets/tests_e2e.gif)\n:::\n\n::: {.column width=\"30%\"}\n### {{< i18n-key \"simulate_user_browser\" >}}\n\n{{< i18n-key \"very_fast\" >}}\n\n{{< i18n-key \"multiple_browsers\" >}}\n:::\n::::\n\n\n## {{< i18n-key \"e2e_tests\" >}}\n\n:::: {.columns}\n::: {.column width=\"70%\"}\n![](assets/tests_e2e-2.gif)\n:::\n\n::: {.column width=\"30%\"}\n### {{< i18n-key \"simulate_user_browser\" >}}\n\n{{< i18n-key \"slow_down_trace\" >}}\n:::\n::::\n\n## {{< i18n-key \"e2e_tests\" >}}\n\n:::: {.columns}\n::: {.column width=\"70%\"}\n```{js}\n#| eval: false\nimport { test, expect } from '@playwright/test';\n\ntest('Fill signature is working', async ({ page }) => {\n  await page.goto('http://localhost:3000/');\n  await expect(page.getByTestId(\"appName\")).toBeVisible();\n\n  await expect(page.getByTestId('firstname')).toBeVisible();\n  await expect(page.getByPlaceholder('John')).toBeEmpty();\n  await page.getByPlaceholder('John').click();\n  await page.getByPlaceholder('John').fill('Arthur');\n  await expect(page.getByTestId('signature-names')).toMatchAriaSnapshot(`- 'cell \"Arthur {{lastname}}\"'`);\n\n  await page.getByPlaceholder('Doe').fill('Bréant');\n  await expect(page.getByTestId('signature-names')).toMatchAriaSnapshot(`- 'cell \"Arthur Bréant\"'`);\n\n  await page.getByRole('button', { name: 'copy fa-solid icon Copy to' }).click();\n  await expect(page.getByText('×Paste the signature in your')).toBeVisible();\n});\n```\n:::\n\n::: {.column width=\"30%\"}\n### {{< i18n-key \"simulate_user_browser\" >}}\n\n{{< i18n-key \"advantage_generate\" >}}\n:::\n::::\n\n## {{< i18n-key \"e2e_tests\" >}}\n\n![](assets/e2e_generator.gif){width=\"100%\"}\n\n## {{< i18n-key \"e2e_tests\" >}}\n\n:::: {.columns}\n::: {.column width=\"45%\"}\n![](assets/result_tests3.png)\n:::\n\n::: {.column width=\"55%\"}\n### {{< i18n-key \"final_step\" >}}\n\n{{< i18n-key \"final_step_text\" >}}\n\n::: {.fragment .fade-left}\n{{< i18n-key \"secured_complete\" >}}\n:::\n\n::: {.fragment .fade-left}\n{{< i18n-key \"e2e_ci\" >}}\n:::\n:::\n::::\n\n## {{< i18n-key \"tests_in_shiny\" >}}\n\n:::: {.columns}\n::: {.column width=\"45%\"}\n![](assets/e2e_tests.png)\n:::\n\n::: {.column width=\"55%\"}\n### {{< i18n-key \"perfect_kitchen\" >}}\n\n\n::: {.fragment .fade-left}\n**{{< i18n-key \"unit_tests\" >}}**\n\n- {{< i18n-key \"unit_tests_functions\" >}}\n:::\n\n::: {.fragment .fade-left}\n**{{< i18n-key \"integration_tests\" >}}**\n\n- {{< i18n-key \"integration_reactive_flows\" >}}\n:::\n\n::: {.fragment .fade-left}\n**{{< i18n-key \"e2e_tests\" >}}**\n\n- {{< i18n-key \"e2e_user_journeys\" >}}\n:::\n:::\n::::\n\n## {{< i18n-key \"pierrot_kitchen\" >}}\n\n:::: {.columns}\n::: {.column width=\"45%\"}\n::: {.fragment .fade-right}\n{{< quarto-lottie src=https://lottie.host/5f2ed099-4737-471d-a199-96b7786d7c88/JhebxcrsLV.json >}}\n:::\n:::\n\n::: {.column width=\"55%\"}\n::: {.fragment .fade-left}\n### {{< i18n-key \"final_result\" >}}\n\n{{< i18n-key \"thanks_to_strategy\" >}}\n:::\n\n::: {.fragment .fade-left}\n- {{< i18n-key \"delivered_robust\" >}}\n\n- {{< i18n-key \"client_satisfied\" >}}\n\n- {{< i18n-key \"future_modifications\" >}}\n:::\n\n::: {.fragment .fade-left}\n{{< i18n-key \"kitchen_functional\" >}}\n:::\n:::\n::::\n\n## {{< i18n-key \"pierrot_kitchen\" >}}\n\n:::: {.columns}\n::: {.column width=\"45%\"}\n{{< quarto-lottie src=https://lottie.host/5f2ed099-4737-471d-a199-96b7786d7c88/JhebxcrsLV.json >}}\n:::\n\n::: {.column width=\"55%\"}\n### {{< i18n-key \"thank_you\" >}}\n\n<a href=\"https://arthurdata.github.io/rencontresR2025\" target=\"_blank\">🔗 arthurdata.github.io/rencontresR2025</a>\n:::\n::::"},"formats":{"thinkridentity-revealjs":{"identifier":{"display-name":"RevealJS","target-format":"thinkridentity-revealjs","base-format":"revealjs","extension-name":"thinkridentity"},"execute":{"fig-width":10,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"shortcodes":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","html-math-method":{"method":"mathjax","url":"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS_HTML-full"},"slide-level":2,"to":"revealjs","filters":[],"include-before-body":["assets/ground.html"],"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":false,"quarto-version":"1.5.57","auto-stretch":true,"menu":{"titleSelector":"h1","useTextContentForMissingTitles":false,"hideMissingTitles":true},"slideNumber":false,"theme":["default","_extensions/ThinkR-open/thinkridentity/thinkridentity.scss","custom.scss"],"logo":"_extensions/ThinkR-open/thinkridentity/logo.png","footer":"{{< i18n-select choices=\"fr:Français, en:English\" selected=\"fr\" >}}\n","title-slide-attributes":{"data-background-image":"_extensions/ThinkR-open/thinkridentity/background.png"},"code-annotations":"hover","chalkboard":false,"revealjs-plugins":["i18n"],"title":"<span data-i18n-key=\"title\"></span>","subtitle":"<span data-i18n-key=\"subtitle\"></span>","author":"<a href=\"https://arthurdata.github.io/rencontresR2025\" target=\"_blank\">🔗 arthurdata.github.io/rencontresR2025</a>","date":"last-modified","i18n":{"defaultLocale":"fr","fr":{"title":"Tester une application Shiny","subtitle":"Méthodologie et outils pratiques","hello":"Bonjour","twoyearsago":"Il y a deux ans...","during_r_meetings":"Lors des","pierrot_title":"Pierrot","meeting_pierrot":"Rencontre de Pierrot","wanted_kitchen":"Il voulait refaire sa cuisine","shiny_for_client":"Il devait produire une application Shiny pour un client","revelation":"Il avait alors eu une <span class='relevant'>révélation</span>","importance_mockup":"L'importance d'une maquette pour :","kitchen_design":"La conception de sa cuisine","shiny_realization":"La réalisation de l'application Shiny","two_years_later":"2 ans après... la suite","swedish_store":"Suite à sa visite dans cette grande enseigne suédoise :","bought_everything":"Il a tout acheté : les meubles, les outils, etc...","mockup_validated":"La maquette est validée avec son client :","ready_to_dev":"Il est prêt à se lancer dans le dev","production_time":"Voici venu le temps de la <span class='relevant'>production</span>","assemble_kitchen":"Pierrot va devoir monter sa cuisine :","assemble_furniture":"Assembler les meubles, fixer, visser, etc...","be_careful":"Faire attention à ne rien casser","and_especially":"Et surtout :","quality_assurance":"S'assurer une qualité de montage suffisante pour les années à venir","mockup_plan":"Il y a le plan de la maquette ...","and_realization":"... et la réalisation","pierrot_fears":"Les craintes de Pierrot...","poorly_assembled":"Une cuisine mal montée,","not_robust":"Une cuisine pas robuste,","etc":"etc...","pierrot_fears_title":"Les craintes de Pierrot...","reassured":"Que Pierrot soit rassuré","seller_assures":"Le vendeur lui assure que :","material_tested":"<b>Le matériel est testé</b> : les vis, les placards, etc... sont soumis à des tests de charge","design_tool":"<b>L'outil de conception</b> montre les erreurs éventuelles","new_revelation":"C'est une nouvelle <span class='relevant'>révélation</span>","what_if_tests":"Et si Pierrot utilisait des tests pour l'application Shiny de son client ?","tests_allow":"Faire des tests dans son application Shiny va lui permettre de :","validate_progressively":"Valider progressivement son code","ensure_no_breaks":"S'assurer de ne rien casser en modifiant et/ou en ajoutant du code","increase_robustness":"Augmenter la robustesse de l'application","tests_in_shiny":"Les tests dans Shiny","unit_tests":"Les tests unitaires","unit_tests_subtitle":"Comment s'assurer que chaque tiroir s'ouvre <br>correctement avant de l'installer dans la cuisine...","test_drawer":"Tester un tiroir individuellement","unit_tests_description":"Comme vérifier qu'un tiroir s'ouvre et se ferme correctement, les tests unitaires dans Shiny permettent de :","verify_function":"Vérifier qu'une fonction retourne la bonne valeur","ensure_errors":"S'assurer que les erreurs sont correctement gérées","test_behavior":"Tester le comportement d'une fonction avec différents inputs","test_individually":"Pierrot va tester les différentes sorties d'une fonction, de manière indépendante des autres fonctions.","good_news":"La bonne nouvelle","followed_tutorial":"Pierrot a suivi le tutoriel des <span class='relevant'>#RR25</span> de lundi matin sur {Golem} !","shiny_is_package":"Son application Shiny est donc un <span class='relevant'>package</span>, ce qui va faciliter la création des tests unitaires.","create_test_structure":"Créer la structure de tests","create_structure_text":"Pour créer la structure de tests, Pierrot peut exécuter :","calculate_average_works":"calculate_average fonctionne","test_numeric_values":"Test avec des valeurs numériques","test_empty_vector":"Test avec un vecteur vide","test_non_numeric":"Test avec input non-numérique","values_must_numeric":"values doit être numérique","first_step":"Un premier pas","first_step_text":"Ici, Pierrot vient tester une fonction dans son application.","however_not_direct":"En revanche, il ne vient pas tester directement son application, les intéractions, etc...","secured_business_logic":"Mais il vient de <span class='relevant'>sécuriser la logique métier derrière son application.<span>","integration_tests":"Les tests d'intégration","integration_subtitle":"Les meubles de cuisine sont testés individuellement, <br>mais comment savoir s'ils fonctionneront ensemble ?","assemble_furniture_together":"Assembler les meubles entre eux","integration_description":"Comme vérifier que la porte du frigo ne butte pas contre le mur, les tests d'intégration permettent de :","test_function_integration":"Tester l'emboitement des fonctions","ensure_modules_react":"S'assurer que les modules Shiny réagissent correctement","verify_reactive_flows":"Vérifier le bon fonctionnement des flux réactifs","integration_difference":"À la différence des tests unitaires, Pierrot va tester les interactions entre les fonctions.","first_value":"Premiere valeur","second_value":"Seconde valeur","calculate":"Calculer !","second_step":"Un second pas","second_step_text":"Ici, Pierrot vient de tester les imbrications dans son application et notamment des interactions.","secured_functioning":"Il vient de <span class='relevant'>sécuriser le bon fonctionnement de son application.<span>","tests_remain_programmatic":"En revanche, ces tests restent \"programmatique\" et ils ne simulent pas un vrai navigateur/utilisateur.","e2e_tests":"Les tests End-to-End","e2e_subtitle":"Nos meubles s'assemblent bien en théorie, <br>mais comment savoir si la cuisine sera vraiment utilisable par Pierrot ?","cook_real_meal":"Cuisiner un vrai repas","e2e_description":"Comme cuisiner réellement dans la cuisine pour s'assurer que tout est fonctionnel, les tests end-to-end permettent de :","simulate_user_interactions":"Simuler de vraies interactions utilisateur","test_real_browser":"Tester l'application dans un vrai navigateur","verify_complete_ux":"Vérifier l'expérience utilisateur complète","simulate_user_browser":"Simuler un utilisateur dans un navigateur","use_playwright":"Pour tester l'application dans un vrai navigateur, Pierrot va utiliser la librairie JS <span class='relevant'>Playwright</span>.","but_r_developer":"Mais Pierrot est développeur R, il va donc utiliser le nouveau package R : <code>{pw}</code>","pw_init":"<code>pw::pw_init()</code> pour initier la structure de tests pour Playwright","then_devtools":"Puis <code>devtools::test()</code> comme précédemment","very_fast":"Ca va très vite ... mais Playwright lance dans un navigateur l'application et simule un comportement utilisateur.","multiple_browsers":"Fonctionne pour plusieurs navigateurs : Chromium, Firefix et Webkit.","slow_down_trace":"On peut ralentir les tests en mode \"trace\"","advantage_generate":"Avantage : Playwright propose de générer le code automatiquement en cliquant dans l'application","final_step":"Un dernier pas","final_step_text":"Ici, Pierrot vient de tester dans des conditions réelles son application.","secured_complete":"Il vient de <span class='relevant'>sécuriser le bon fonctionnement de son application, tant sur la logique métier que sur la partie UI</span>.","e2e_ci":"Les tests End-to-End fonctionnent également dans la CI pour assurer à Pierrot un continuité dans son développement.","perfect_kitchen":"La cuisine parfaite de Pierrot","unit_tests_functions":"Toutes les fonctions utilitaires et métiers","integration_reactive_flows":"Flux réactifs principaux","e2e_user_journeys":"Parcours utilisateur critiques ou complexes","pierrot_kitchen":"La cuisine de Pierrot","final_result":"Le résultat final","thanks_to_strategy":"Grâce à sa stratégie de tests à trois niveaux :","delivered_robust":"Pierrot a livré une application robuste","client_satisfied":"Son client est satisfait","future_modifications":"Les modifications futures seront plus sereines","kitchen_functional":"Et sa cuisine est parfaitement fonctionnelle !","thank_you":"Merci"},"en":{"title":"Testing a Shiny Application","subtitle":"Methodology and Practical Tools","hello":"Hello","twoyearsago":"Two years ago...","during_r_meetings":"During the","pierrot_title":"Pierrot","meeting_pierrot":"Meeting Pierrot","wanted_kitchen":"He wanted to renovate his kitchen","shiny_for_client":"He had to produce a Shiny application for a client","revelation":"He had then had a <span class='relevant'>revelation</span>","importance_mockup":"The importance of a mockup for:","kitchen_design":"Designing his kitchen","shiny_realization":"Building the Shiny application","two_years_later":"2 years later... the sequel","swedish_store":"Following his visit to that famous Swedish furniture store:","bought_everything":"He bought everything: furniture, tools, etc...","mockup_validated":"The mockup is validated with his client:","ready_to_dev":"He's ready to start development","production_time":"Now begins the time of <span class='relevant'>production</span>","assemble_kitchen":"Pierrot will have to assemble his kitchen:","assemble_furniture":"Assemble furniture, attach, screw, etc...","be_careful":"Be careful not to break anything","and_especially":"And most importantly:","quality_assurance":"Ensure sufficient build quality for years to come","mockup_plan":"There's the mockup plan...","and_realization":"... and the implementation","pierrot_fears":"Pierrot's fears...","poorly_assembled":"A poorly assembled kitchen,","not_robust":"A kitchen that's not robust,","etc":"etc...","pierrot_fears_title":"Pierrot's fears...","reassured":"Let Pierrot be reassured","seller_assures":"The salesperson assures him that:","material_tested":"<b>The material is tested</b>: screws, cabinets, etc... are subjected to load tests","design_tool":"<b>The design tool</b> shows potential errors","new_revelation":"It's a new <span class='relevant'>revelation</span>","what_if_tests":"What if Pierrot used tests for his client's Shiny application?","tests_allow":"Running tests in his Shiny application will allow him to:","validate_progressively":"Progressively validate his code","ensure_no_breaks":"Ensure nothing breaks when modifying and/or adding code","increase_robustness":"Increase the application's robustness","tests_in_shiny":"Testing in Shiny","unit_tests":"Unit tests","unit_tests_subtitle":"How to ensure each drawer opens<br> correctly before installing it in the kitchen...","test_drawer":"Testing a drawer individually","unit_tests_description":"Like checking that a drawer opens and closes properly, unit tests in Shiny allow you to:","verify_function":"Verify that a function returns the correct value","ensure_errors":"Ensure errors are handled correctly","test_behavior":"Test a function's behavior with different inputs","test_individually":"Pierrot will test the different outputs of a function, independently of other functions.","good_news":"The good news","followed_tutorial":"Pierrot followed the <span class='relevant'>#RR25</span> Monday morning tutorial on {Golem}!","shiny_is_package":"His Shiny application is therefore a <span class='relevant'>package</span>, which will facilitate the creation of unit tests.","create_test_structure":"Creating the test structure","create_structure_text":"To create the test structure, Pierrot can run:","calculate_average_works":"calculate_average works","test_numeric_values":"Test with numeric values","test_empty_vector":"Test with empty vector","test_non_numeric":"Test with non-numeric input","values_must_numeric":"values must be numeric","first_step":"A first step","first_step_text":"Here, Pierrot just tested a function in his application.","however_not_direct":"However, he doesn't directly test his application, interactions, etc...","secured_business_logic":"But he just <span class='relevant'>secured the business logic behind his application.</span>","integration_tests":"Integration tests","integration_subtitle":"Kitchen furniture is tested individually, <br>but how do we know if they'll work together?","assemble_furniture_together":"Assembling furniture together","integration_description":"Like checking that the fridge door doesn't hit the wall, integration tests allow you to:","test_function_integration":"Test function integration","ensure_modules_react":"Ensure Shiny modules react correctly","verify_reactive_flows":"Verify proper functioning of reactive flows","integration_difference":"Unlike unit tests, Pierrot will test interactions between functions.","first_value":"First value","second_value":"Second value","calculate":"Calculate!","second_step":"A second step","second_step_text":"Here, Pierrot just tested the integrations in his application, particularly interactions.","secured_functioning":"He just <span class='relevant'>secured the proper functioning of his application.</span>","tests_remain_programmatic":"However, these tests remain \"programmatic\" and they don't simulate a real browser/user.","e2e_tests":"End-to-End tests","e2e_subtitle":"Our furniture assembles well in theory, <br>but how do we know if the kitchen will really be usable by Pierrot?","cook_real_meal":"Cooking a real meal","e2e_description":"Like actually cooking in the kitchen to ensure everything is functional, end-to-end tests allow you to:","simulate_user_interactions":"Simulate real user interactions","test_real_browser":"Test the application in a real browser","verify_complete_ux":"Verify the complete user experience","simulate_user_browser":"Simulating a user in a browser","use_playwright":"To test the application in a real browser, Pierrot will use the JS library <span class='relevant'>Playwright</span>.","but_r_developer":"But Pierrot is an R developer, so he'll use the new R package: <code>{pw}</code>","pw_init":"<code>pw::pw_init()</code> to initiate the test structure for Playwright","then_devtools":"Then <code>devtools::test()</code> as before","very_fast":"It goes very fast... but Playwright launches the application in a browser and simulates user behavior.","multiple_browsers":"Works for multiple browsers: Chromium, Firefox and Webkit.","slow_down_trace":"We can slow down tests in \"trace\" mode","advantage_generate":"Advantage: Playwright offers to generate the code automatically by clicking in the application","final_step":"A final step","final_step_text":"Here, Pierrot just tested his application under real conditions.","secured_complete":"He just <span class='relevant'>secured the proper functioning of his application, both on the business logic and UI parts</span>.","e2e_ci":"End-to-End tests also work in CI to ensure Pierrot continuity in his development.","perfect_kitchen":"Pierrot's perfect kitchen","unit_tests_functions":"All utility and business functions","integration_reactive_flows":"Main reactive flows","e2e_user_journeys":"Critical or complex user journeys","pierrot_kitchen":"Pierrot's kitchen","final_result":"The final result","thanks_to_strategy":"Thanks to his three-level testing strategy:","delivered_robust":"Pierrot delivered a robust application","client_satisfied":"His client is satisfied","future_modifications":"Future modifications will be more serene","kitchen_functional":"And his kitchen is perfectly functional!","thank_you":"Thank you"}}}}},"projectFormats":[]}