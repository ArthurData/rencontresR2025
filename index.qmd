---
title: <span data-i18n-key="title"></span>
subtitle: <span data-i18n-key="subtitle"></span>
format: 
  thinkridentity-revealjs:
    footer: |
      {{< i18n-select choices="fr:FranÃ§ais, en:English" selected="fr" >}}
    theme: custom.scss
    slideNumber: false
    i18n:
      defaultLocale: "fr"
      dictionaryPath:
        translations.yml
chalkboard: false
author: <a href="https://arthurdata.github.io/rencontresR2025" target="_blank">ðŸ”— arthurdata.github.io/rencontresR2025</a>
include-before-body: assets/ground.html
date: last-modified
revealjs-plugins:
  - i18n
---

# {{< i18n-key "hello" >}}

# {{< i18n-key "twoyearsago" >}}

{{< i18n-key "during_r_meetings" >}} <a href="https://www.youtube.com/watch?v=iWD_cLdmLUI&t=81s" target="_blank">ðŸ”— Rencontres R 2023...</a>

## {{< i18n-key "pierrot_title" >}}

:::: {.columns}
::: {.column width="45%"}
::: {.fragment .fade-right}
{{< quarto-lottie src=https://lottie.host/5f2ed099-4737-471d-a199-96b7786d7c88/JhebxcrsLV.json >}}
:::
:::

::: {.column width="55%"}
::: {.fragment .fade-left}
### {{< i18n-key "meeting_pierrot" >}}
:::

::: {.fragment .fade-left}
{{< i18n-key "wanted_kitchen" >}}
:::

::: {.fragment .fade-left}
{{< i18n-key "shiny_for_client" >}}
:::
:::
::::

## {{< i18n-key "pierrot_title" >}}

:::: {.columns}
::: {.column width="45%"}
{{< quarto-lottie src=https://lottie.host/5f2ed099-4737-471d-a199-96b7786d7c88/JhebxcrsLV.json >}}
:::

::: {.column width="55%"}
### {{< i18n-key "revelation" >}}

::: {.fragment .fade-left}
{{< i18n-key "importance_mockup" >}} 

- {{< i18n-key "kitchen_design" >}}
- {{< i18n-key "shiny_realization" >}}
:::
:::
::::

## {{< i18n-key "pierrot_title" >}}

:::: {.columns}
::: {.column width="45%"}
{{< quarto-lottie src=https://lottie.host/5f2ed099-4737-471d-a199-96b7786d7c88/JhebxcrsLV.json >}}
:::

::: {.column width="55%"}
### {{< i18n-key "two_years_later" >}}

::: {.fragment .fade-left}
{{< i18n-key "swedish_store" >}}

{{< i18n-key "bought_everything" >}}
:::

::: {.fragment .fade-left}
{{< i18n-key "mockup_validated" >}}

{{< i18n-key "ready_to_dev" >}}
:::
:::
::::

## {{< i18n-key "pierrot_title" >}}

:::: {.columns}
::: {.column width="45%"}
{{< quarto-lottie src=https://lottie.host/5f2ed099-4737-471d-a199-96b7786d7c88/JhebxcrsLV.json >}}
:::

::: {.column width="55%"}
### {{< i18n-key "production_time" >}}

::: {.fragment .fade-left}
{{< i18n-key "assemble_kitchen" >}}

- {{< i18n-key "assemble_furniture" >}}
- {{< i18n-key "be_careful" >}}
:::

::: {.fragment .fade-left}
{{< i18n-key "and_especially" >}}
:::

::: {.fragment .fade-left}
{{< i18n-key "quality_assurance" >}}
:::
:::
::::

# {{< i18n-key "mockup_plan" >}}

# {{< i18n-key "and_realization" >}}

## {{< i18n-key "pierrot_title" >}}

:::: {.columns}
::: {.column width="25%"}
:::

::: {.column width="75%"}
### {{< i18n-key "pierrot_fears_title" >}}

- {{< i18n-key "poorly_assembled" >}}
- {{< i18n-key "not_robust" >}}
- {{< i18n-key "etc" >}}
:::
::::

## {{< i18n-key "pierrot_fears_title" >}}

::: {.r-stack}
![](assets/failed1.webp){.fragment width="650" height="600"}

![](assets/failed2.webp){.fragment width="650" height="600"}

![](assets/failed3.webp){.fragment width="650" height="600"}
:::

## {{< i18n-key "pierrot_title" >}}

:::: {.columns}
::: {.column width="25%"}
:::

::: {.column width="75%"}
### {{< i18n-key "reassured" >}}

{{< i18n-key "seller_assures" >}}

- {{< i18n-key "material_tested" >}}

- {{< i18n-key "design_tool" >}}
:::
::::

## {{< i18n-key "pierrot_title" >}}

:::: {.columns}
::: {.column width="45%"}
{{< quarto-lottie src=https://lottie.host/5f2ed099-4737-471d-a199-96b7786d7c88/JhebxcrsLV.json >}}
:::

::: {.column width="55%"}
### {{< i18n-key "new_revelation" >}}

::: {.fragment .fade-left}
{{< i18n-key "what_if_tests" >}}
:::

::: {.fragment .fade-left}
{{< i18n-key "tests_allow" >}}

- {{< i18n-key "validate_progressively" >}}

- {{< i18n-key "ensure_no_breaks" >}}

- {{< i18n-key "increase_robustness" >}}
:::

:::
::::

# {{< i18n-key "tests_in_shiny" >}}

# {{< i18n-key "unit_tests" >}}

_{{< i18n-key "unit_tests_subtitle" >}}_

## {{< i18n-key "unit_tests" >}}

:::: {.columns}
::: {.column width="45%"}
![](assets/unit_tests.png)
:::

::: {.column width="55%"}
### {{< i18n-key "test_drawer" >}}

{{< i18n-key "unit_tests_description" >}}

::: {.fragment .fade-left}
- {{< i18n-key "verify_function" >}}
- {{< i18n-key "ensure_errors" >}}
- {{< i18n-key "test_behavior" >}}
:::
:::
::::

## {{< i18n-key "unit_tests" >}}

:::: {.columns}
::: {.column width="45%"}
![](assets/testunitaire.png)
:::

::: {.column width="55%"}
### {{< i18n-key "test_drawer" >}}

{{< i18n-key "test_individually" >}}
:::
::::

## {{< i18n-key "unit_tests" >}}

:::: {.columns}
::: {.column width="45%"}
![](assets/testunitaire.png)
:::

::: {.column width="55%"}
### {{< i18n-key "good_news" >}}

{{< i18n-key "followed_tutorial" >}}

{{< i18n-key "shiny_is_package" >}}
:::
::::

## {{< i18n-key "unit_tests" >}}

:::: {.columns}
::: {.column width="45%"}
```
myShinyApp/
â”œâ”€â”€ DESCRIPTION
â”œâ”€â”€ NAMESPACE
â”œâ”€â”€ app.R
â”œâ”€â”€ R/
â”‚   â”œâ”€â”€ app_ui.R
â”‚   â”œâ”€â”€ app_server.R
â”‚   â””â”€â”€ run_app.R
â”œâ”€â”€ tests/
â”‚   â”œâ”€â”€ testthat/
â”‚   â”‚   â”œâ”€â”€ test-calculate_average.R
â”‚   â”‚   â”œâ”€â”€ test-golem-recommended.R
â”‚   â”‚   â””â”€â”€ ...
â”‚   â””â”€â”€ testthat.R
```
:::

::: {.column width="55%"}
### {{< i18n-key "create_test_structure" >}}

{{< i18n-key "create_structure_text" >}}

- `golem::use_recommended_tests()`

- `usethis::use_test("calculate_average")`
:::
::::

## {{< i18n-key "unit_tests" >}}

:::: {.columns}
::: {.column width="45%"}
```{r}
#| eval: false
#| echo: true
calculate_average <- function(values) {
  if (!is.numeric(values)) {
    stop("values must be numeric")
  }
  if (length(values) == 0) {
    return(0)
  }
  sum(values) / length(values)
}
```
:::

::: {.column width="55%"}
```{r}
#| eval: false
#| echo: true
test_that("calculate_average works", {
  # Test with numeric values
  expect_equal(
    object = calculate_average(c(10, 20, 30)), 
    expected = 20
  )
  
  # Test with empty vector
  expect_equal(
    object = calculate_average(0), 
    expected = 0
  )
  
  # Test with non-numeric input
  expect_error(
    object = calculate_average(c("a", "b")), 
    "values must be numeric"
  )
})
```
:::
::::

## {{< i18n-key "unit_tests" >}}

:::: {.columns}
::: {.column width="45%"}
![](assets/result_tests.png)
:::

::: {.column width="55%"}
### {{< i18n-key "first_step" >}}

{{< i18n-key "first_step_text" >}}

::: {.fragment .fade-left}
{{< i18n-key "however_not_direct" >}}
:::

::: {.fragment .fade-left}
{{< i18n-key "secured_business_logic" >}}
:::
:::
::::

# {{< i18n-key "integration_tests" >}}

_{{< i18n-key "integration_subtitle" >}}_

## {{< i18n-key "integration_tests" >}}

:::: {.columns}
::: {.column width="45%"}
![](assets/inte_tests.png)
:::

::: {.column width="55%"}
### {{< i18n-key "assemble_furniture_together" >}}

{{< i18n-key "integration_description" >}}

::: {.fragment .fade-left}
- {{< i18n-key "test_function_integration" >}}

- {{< i18n-key "ensure_modules_react" >}}

- {{< i18n-key "verify_reactive_flows" >}}
:::
:::
::::

## {{< i18n-key "integration_tests" >}}

:::: {.columns}
::: {.column width="45%"}
\ 

\ 

![](assets/test_usage.png)
:::

::: {.column width="55%"}
### {{< i18n-key "assemble_furniture_together" >}}

{{< i18n-key "integration_difference" >}}
:::
::::

## {{< i18n-key "integration_tests" >}}

:::: {.columns}
::: {.column width="45%"}
```{r}
#| eval: false
#| echo: true
app_ui <- function(request) {
  fluidPage(
    numericInput(
      inputId = "num1",
      label = "First value",
      value = 10
    ),
    numericInput(
      inputId = "num2",
      label = "Second value",
      value = 10
    ),
    ...
    actionButton(
      inputId = "go",
      label = "Calculate!"
    )
  )
}
```
:::

::: {.column width="55%"}
![](assets/app_inte.png){width=50%}
:::
::::

## {{< i18n-key "integration_tests" >}}

:::: {.columns}
::: {.column width="45%"}
```{r}
#| eval: false
#| echo: true
app_ui <- function(request) {
  fluidPage(
    numericInput(
      inputId = "num1",
      label = "First value",
      value = 10
    ),
    numericInput(
      inputId = "num2",
      label = "Second value",
      value = 10
    ),
    ...
    actionButton(
      inputId = "go",
      label = "Calculate!"
    )
  )
}
```
:::

::: {.column width="55%"}
```{r}
#| eval: false
#| echo: true
app_server <- function(input, output, session) {

  rv <- reactiveValues()

  observeEvent(input$go, {
    rv$avg <- calculate_average(
      values = c(
        input$num1,
        input$num2,
        input$num3,
        input$num4
      )
    )
  })
}
```
:::
::::


## {{< i18n-key "integration_tests" >}}

:::: {.columns}
::: {.column width="45%"}
```{r}
#| eval: false
#| echo: true
testServer(app_server, {
  session$setInputs(num1 = 5)
  session$setInputs(num2 = 5)
  session$setInputs(num3 = 5)
  session$setInputs(num4 = 5)
  session$setInputs(go = 1)

  expect_equal(
    object = rv$avg, 
    expected = 5
  )

  session$setInputs(num1 = 10)
  session$setInputs(num2 = 20)
  session$setInputs(num3 = 30)
  session$setInputs(num4 = 12)
  session$setInputs(go = 2)

  expect_equal(
    object = rv$avg,
    expected = 18
  )
})

```
:::

::: {.column width="55%"}
```{r}
#| eval: false
#| echo: true
app_server <- function(input, output, session) {

  rv <- reactiveValues()

  observeEvent(input$go, {
    rv$avg <- calculate_average(
      values = c(
        input$num1,
        input$num2,
        input$num3,
        input$num4
      )
    )
  })
}
```
:::
::::

## {{< i18n-key "integration_tests" >}}

:::: {.columns}
::: {.column width="45%"}
![](assets/result_tests2.png)
:::

::: {.column width="55%"}
### {{< i18n-key "second_step" >}}

{{< i18n-key "second_step_text" >}}

::: {.fragment .fade-left}
{{< i18n-key "secured_functioning" >}}
:::

::: {.fragment .fade-left}
{{< i18n-key "tests_remain_programmatic" >}}
:::
:::
::::

# {{< i18n-key "e2e_tests" >}}

_{{< i18n-key "e2e_subtitle" >}}_

## {{< i18n-key "e2e_tests" >}}

:::: {.columns}
::: {.column width="45%"}
![](assets/e2e_tests.png)
:::

::: {.column width="55%"}
### {{< i18n-key "cook_real_meal" >}}

{{< i18n-key "e2e_description" >}}

::: {.fragment .fade-left}
- {{< i18n-key "simulate_user_interactions" >}}

- {{< i18n-key "test_real_browser" >}}

- {{< i18n-key "verify_complete_ux" >}}
:::
:::
::::

## {{< i18n-key "e2e_tests" >}}

:::: {.columns}
::: {.column width="45%"}
![](assets/e2e_tests.png)
:::

::: {.column width="55%"}
### {{< i18n-key "simulate_user_browser" >}}

{{< i18n-key "use_playwright" >}}

::: {.fragment .fade-left}
{{< i18n-key "but_r_developer" >}}

<a href="https://github.com/ThinkR-open/pw" target="_blank">ðŸ”— github.com/ThinkR-open/pw</a>
:::
:::
::::

## {{< i18n-key "e2e_tests" >}}

:::: {.columns}
::: {.column width="65%"}
![](assets/signature-r.png)
:::

::: {.column width="35%"}
### {{< i18n-key "simulate_user_browser" >}}

<a href="https://connect.thinkr.fr/signature-r/" target="_blank">ðŸ”— connect.thinkr.fr/signature-r/</a>

::: {.fragment .fade-left}
{{< i18n-key "pw_init" >}}

{{< i18n-key "then_devtools" >}}
:::
:::
::::


## {{< i18n-key "e2e_tests" >}}

:::: {.columns}
::: {.column width="70%"}
![](assets/tests_e2e.gif)
:::

::: {.column width="30%"}
### {{< i18n-key "simulate_user_browser" >}}

{{< i18n-key "very_fast" >}}

{{< i18n-key "multiple_browsers" >}}
:::
::::


## {{< i18n-key "e2e_tests" >}}

:::: {.columns}
::: {.column width="70%"}
![](assets/tests_e2e-2.gif)
:::

::: {.column width="30%"}
### {{< i18n-key "simulate_user_browser" >}}

{{< i18n-key "slow_down_trace" >}}
:::
::::

## {{< i18n-key "e2e_tests" >}}

:::: {.columns}
::: {.column width="70%"}
```{js}
#| eval: false
import { test, expect } from '@playwright/test';

test('Fill signature is working', async ({ page }) => {
  await page.goto('http://localhost:3000/');
  await expect(page.getByTestId("appName")).toBeVisible();

  await expect(page.getByTestId('firstname')).toBeVisible();
  await expect(page.getByPlaceholder('John')).toBeEmpty();
  await page.getByPlaceholder('John').click();
  await page.getByPlaceholder('John').fill('Arthur');
  await expect(page.getByTestId('signature-names')).toMatchAriaSnapshot(`- 'cell "Arthur {{lastname}}"'`);

  await page.getByPlaceholder('Doe').fill('BrÃ©ant');
  await expect(page.getByTestId('signature-names')).toMatchAriaSnapshot(`- 'cell "Arthur BrÃ©ant"'`);

  await page.getByRole('button', { name: 'copy fa-solid icon Copy to' }).click();
  await expect(page.getByText('Ã—Paste the signature in your')).toBeVisible();
});
```
:::

::: {.column width="30%"}
### {{< i18n-key "simulate_user_browser" >}}

{{< i18n-key "advantage_generate" >}}
:::
::::

## {{< i18n-key "e2e_tests" >}}

![](assets/e2e_generator.gif){width="100%"}

## {{< i18n-key "e2e_tests" >}}

:::: {.columns}
::: {.column width="45%"}
![](assets/result_tests3.png)
:::

::: {.column width="55%"}
### {{< i18n-key "final_step" >}}

{{< i18n-key "final_step_text" >}}

::: {.fragment .fade-left}
{{< i18n-key "secured_complete" >}}
:::

::: {.fragment .fade-left}
{{< i18n-key "e2e_ci" >}}
:::
:::
::::

## {{< i18n-key "tests_in_shiny" >}}

:::: {.columns}
::: {.column width="45%"}
![](assets/e2e_tests.png)
:::

::: {.column width="55%"}
### {{< i18n-key "perfect_kitchen" >}}


::: {.fragment .fade-left}
**{{< i18n-key "unit_tests" >}}**

- {{< i18n-key "unit_tests_functions" >}}
:::

::: {.fragment .fade-left}
**{{< i18n-key "integration_tests" >}}**

- {{< i18n-key "integration_reactive_flows" >}}
:::

::: {.fragment .fade-left}
**{{< i18n-key "e2e_tests" >}}**

- {{< i18n-key "e2e_user_journeys" >}}
:::
:::
::::

## {{< i18n-key "pierrot_kitchen" >}}

:::: {.columns}
::: {.column width="45%"}
::: {.fragment .fade-right}
{{< quarto-lottie src=https://lottie.host/5f2ed099-4737-471d-a199-96b7786d7c88/JhebxcrsLV.json >}}
:::
:::

::: {.column width="55%"}
::: {.fragment .fade-left}
### {{< i18n-key "final_result" >}}

{{< i18n-key "thanks_to_strategy" >}}
:::

::: {.fragment .fade-left}
- {{< i18n-key "delivered_robust" >}}

- {{< i18n-key "client_satisfied" >}}

- {{< i18n-key "future_modifications" >}}
:::

::: {.fragment .fade-left}
{{< i18n-key "kitchen_functional" >}}
:::
:::
::::

## {{< i18n-key "pierrot_kitchen" >}}

:::: {.columns}
::: {.column width="45%"}
{{< quarto-lottie src=https://lottie.host/5f2ed099-4737-471d-a199-96b7786d7c88/JhebxcrsLV.json >}}
:::

::: {.column width="55%"}
### {{< i18n-key "thank_you" >}}

<a href="https://arthurdata.github.io/rencontresR2025" target="_blank">ðŸ”— arthurdata.github.io/rencontresR2025</a>
:::
::::